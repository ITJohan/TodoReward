@inject UserStateContainer UserStateContainer

<div class="card">
    <div class="header">
        @if (Editing)
        {
            <input @bind="Reward.Description" />
            <div class="buttons">
                <button class="success-button" @onclick="ToggleEdit">Save</button>
                <button class="danger-button" @onclick="DeleteRewardParent">Delete</button>
            </div>
        }
        else
        {
            <p>@Reward.Description</p>
            <div class="buttons">
                <button class="primary-button" @onclick="ToggleEdit">Edit</button>
                <button class="success-button" @onclick="HandleDone">Done</button>
            </div>
        }
    </div>
    <div class="info">
        @if (Editing)
        {
            <div>⭐ <input class="info-input" @bind="Reward.Points" /> points</div>
        }
        else
        {
            <div>⭐ @Reward.Points points</div>
        }
    </div>
</div>

@code {
    [Parameter]
    public Reward Reward { get; set; }
    [Parameter]
    public Action DeleteRewardParent { get; set; }
    private bool Editing { get; set; }

    private void ToggleEdit() => Editing = !Editing;

    protected override void OnInitialized()
    {
        if (Reward.Description == null)
        {
            Editing = true;
        }
    }

    private void HandleDone()
    {
        UserStateContainer.Points += Reward.Points;
    }
}
