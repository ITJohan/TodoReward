@page "/rewards"
@inject IRewardRepository RewardRepository

@foreach (var reward in _rewards)
{
    <RewardCard Reward="@reward" DeleteRewardParent="() => DeleteReward(reward.Id)" />
}

<br />
<button class="primary-button" @onclick="AddReward">Add reward</button>

@code {
    [Parameter]
    public Guid UserId { get; set; }
    private List<Reward> _rewards;

    protected override Task OnInitializedAsync()
    {
        _rewards = RewardRepository.GetRewards(new Guid("0021c27c-ab20-4e79-9af4-a6a46294c293"));
        return base.OnInitializedAsync();
    }

    private void AddReward()
    {
        var newReward = new Reward();
        RewardRepository.AddReward(newReward, UserId);
        _rewards.Add(newReward);
    }

    private void DeleteReward(Guid rewardId)
    {
        _rewards.RemoveAll(r => r.Id == rewardId);
        RewardRepository.DeleteReward(rewardId, UserId);
        this.StateHasChanged();
    }
}
