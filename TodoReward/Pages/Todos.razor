@page "/todos"
@inject ITodoRepository TodoRepository

@foreach (var todo in _todos)
{
    <TodoCard Todo="@todo"
              DeleteTodo="() => DeleteTodo(todo.Id)"
              OrderTodos="() => OrderTodos()" />
}

<br />
<button class="primary-button" @onclick="AddTodo">Add todo</button>

@code {
    [Parameter]
    public Guid UserId { get; set; }
    private List<Todo> _todos;

    protected override Task OnInitializedAsync()
    {
        // TODO: Change this to UserId
        _todos = TodoRepository.GetTodos(new Guid("0021c27c-ab20-4e79-9af4-a6a46294c293"));
        OrderTodos();
        return base.OnInitializedAsync();
    }

    private void AddTodo()
    {
        var newTodo = new Todo();
        TodoRepository.AddTodo(newTodo, UserId);
        _todos.Add(newTodo);
    }

    private void DeleteTodo(Guid todoId)
    {
        _todos.RemoveAll(t => t.Id == todoId);
        TodoRepository.DeleteTodo(todoId, UserId);
        OrderTodos();
    }

    private void OrderTodos()
    {
        _todos = _todos.OrderBy(t => t.TimeLeft).ToList();
        this.StateHasChanged();
    }
}
