@page "/todos"
@inject ITodoRepository TodoRepository

@foreach (var todo in todos)
{
    <TodoCard Todo="@todo"
              DeleteTodo="() => DeleteTodo(todo.Id)"
              OrderTodos="() => OrderTodos()" />
}

<br />
<button class="primary-button" @onclick="AddTodo">Add todo</button>

@code {
    private List<Todo> todos = new List<Todo>
{
        new Todo
        {
            Id = 1,
            Description = "Ring Siv",
            Points = 10,
            TimeLeft = 16,
            RepeatInterval = 30
        },
        new Todo
        {
            Id = 2,
            Description = "Ring Solveig",
            Points = 100,
            TimeLeft = 4,
            RepeatInterval = 30
        },
        new Todo
        {
            Id = 3,
            Description = "Træna",
            Points = 10,
            TimeLeft = 1,
            RepeatInterval = 1
        },
        new Todo
        {
            Id = 4,
            Description = "Yoga",
            Points = 10,
            TimeLeft = 1,
            RepeatInterval = 1
        }
    };

    protected override Task OnInitializedAsync()
    {
        OrderTodos();
        return base.OnInitializedAsync();
    }

    private void AddTodo()
    {
        var newTodo = new Todo();
        TodoRepository.AddTodo(newTodo);
        todos.Add(newTodo);
    }

    private void DeleteTodo(int Id)
    {
        todos.RemoveAll(t => t.Id == Id);
        OrderTodos();
    }

    private void OrderTodos()
    {
        todos = todos.OrderBy(t => t.TimeLeft).ToList();
        this.StateHasChanged();
    }
}
